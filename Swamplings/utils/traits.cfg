#textdomain wesnoth-Swamplings

#define TRAIT_SWAMPSAVVY
    # Units with trait Swamp Savvy move quicker and have better defense in swamp terrain.
    [trait]
        id=swamp_savvy
        availability="any"
        male_name= _ "swamp savvy"
        female_name= _ "female^swamp savvy"
        description= _ "Better defense and quicker in swamp"
        [effect]
            apply_to=movement_costs
            replace=true
            [movement_costs]
                swamp_water=2
            [/movement_costs]
        [/effect]
        [effect]
            apply_to=defense
            replace=true
            [defense]
                swamp_water=50
            [/defense]
        [/effect]
    [/trait]
#enddef

#define SS_TRAIT_ON_ADVANCEMENT
    # swamp savvy trait awarded on advancement of Spearman (thanks Zookeeper for showing me how to do this!)
    [event]
        name=advance
        first_time_only=no

        [filter]
            type=Goblin Spearman Sw
        [/filter]

        [set_variables]
            name=existing_traits.trait
            to_variable=unit.modifications.trait
        [/set_variables]

        [set_variables]
            name=new_traits

            [value]
                {TRAIT_SWAMPSAVVY}
            [/value]
        [/set_variables]

        [set_variables]
            name=unit.modifications.trait

            [insert_tag]
                name=value
                variable=existing_traits.trait
            [/insert_tag]

            [insert_tag]
                name=value
                variable=new_traits.trait
            [/insert_tag]
        [/set_variables]

        [unstore_unit]
            variable=unit
            find_vacant=no
            #advance=no
        [/unstore_unit]

        {CLEAR_VARIABLE existing_traits,new_traits}
    [/event]
#enddef

#define SS_TRAIT_ON_RECRUITMENT TYPE
    # swamp savvy trait given to level 1 units:

    [event]
        name=recruit
        first_time_only=no

        [filter]
            type={TYPE}
        [/filter]

        [set_variables]
            name=existing_traits.trait
            to_variable=unit.modifications.trait
        [/set_variables]

        [set_variables]
            name=new_traits

            [value]
                {TRAIT_SWAMPSAVVY}
            [/value]
        [/set_variables]

        [set_variables]
            name=unit.modifications.trait

            [insert_tag]
                name=value
                variable=existing_traits.trait
            [/insert_tag]

            [insert_tag]
                name=value
                variable=new_traits.trait
            [/insert_tag]
        [/set_variables]

        {CLEAR_VARIABLE unit.defense,unit.movement_costs}

        [unstore_unit]
            variable=unit
            find_vacant=no
            #advance=no
        [/unstore_unit]

        {CLEAR_VARIABLE existing_traits,new_traits}
    [/event]
#enddef

#define LOOSE_CANNON
    # whenever a Thundergobo misses, he has a 33% chance of shooting himself.
    [event]
        name=attacker misses
        first_time_only=no

        [filter]
            type=Thundergobo
        [/filter]

        {IF_VAR weapon.name equals thunderstick (
            [then]
                # chance of misfire: 33%

                {VARIABLE_OP random rand 1..3}

                {IF_VAR random equals 1 (
                    [then]
                        [sound]
                            name=thunderstick.ogg
                        [/sound]
                        [sound]
                            name=goblin-hit-2.ogg
                        [/sound]

                        {VARIABLE_OP unit.hitpoints add -9}

                        [unstore_unit]
                            variable=unit
                            find_vacant=no
                            text=_"MISFIRE!"
                            {COLOR_HARM}
                        [/unstore_unit]

                        [redraw]
                        [/redraw]
                    [/then]
                )}
            [/then]
        )}
    [/event]

    # whenever a Vundergobo misses, he has a 20% chance of shooting himself.
    [event]
        name=attacker misses
        first_time_only=no

        [filter]
            type=Vundergobo
        [/filter]

        {IF_VAR weapon.name equals thunderstick (
            [then]
                # chance of misfire: 20%

                {VARIABLE_OP random rand 1..5}

                {IF_VAR random equals 1 (
                    [then]
                        [sound]
                            name=thunderstick.ogg
                        [/sound]
                        [sound]
                            name=goblin-hit-2.ogg
                        [/sound]

                        {VARIABLE_OP unit.hitpoints add -9}

                        [unstore_unit]
                            variable=unit
                            find_vacant=no
                            text=_"MISFIRE!"
                            {COLOR_HARM}
                        [/unstore_unit]

                        [redraw]
                        [/redraw]
                    [/then]
                )}
            [/then]
        )}
    [/event]
#enddef
