#textdomain wesnoth-swamplings

# edited version of charm from the wiki. should only work on bats.
#define CHARM FILTER WEAPON
    [event]
        name=attacker_hits
        first_time_only=no

        [filter]
            {FILTER}
        [/filter]

        [filter_attack]
            name={WEAPON}
        [/filter_attack]

        [filter_second]
            race=bats
        [/filter_second]

        {STORE_UNIT_VAR x,y=$x1,$y1 side charmer_side}
        {STORE_UNIT_VAR x,y=$x2,$y2 side charmed_side}

        {IF_VAR charmer_side not_equals $charmed_side (
            [then]
                {MODIFY_UNIT x,y=$x2,$y2 variables.real_side $charmed_side}
                {MODIFY_UNIT x,y=$x2,$y2 side $charmer_side}
                {MODIFY_UNIT x,y=$x2,$y2 moves 1}
                {MODIFY_UNIT x,y=$x2,$y2 attacks_left 1}

                {VARIABLE_OP varname value "side_$charmed_side|_units_charmed"}
                {VARIABLE $varname yes}

                {CLEAR_VARIABLE varname}
            [/then]
        )}

            {IF_VAR second_unit.hitpoints less_than_equal_to 0 (
                [then]
                    [kill]
                        x,y=$x2,$y2
                        animate=yes
                        fire_event=yes
                    [/kill]
                [/then]
            )}

        {CLEAR_VARIABLE charmer_side}
        {CLEAR_VARIABLE charmed_side}
    [/event]

#enddef

# (copied from LoW)
# originally: INVISIBILITY_POTION AFFIX DESCRIPTION but I didn't need the DESCRIPTION
#define INVISIBILITY_POTION AFFIX
    [object]
        id=invisibility_potion_{AFFIX}
        silent=yes
        #        description={DESCRIPTION}
        duration=level
        [filter]
            id={AFFIX}
        [/filter]
        [effect]
            apply_to=new_ability
            [abilities]
                [hides]
                    id=invisible
                    name= _ "invisible"
                    name_inactive= _ "invisible"
                    description= _ "invisible:
Enemy units cannot see this unit, except for wolf-based units who can smell it if close enough. Hence except for wolf-based units, enemy units will not initiate an attack on this unit. Defense is at 80 percent for every terrain except water, where it is 70 percent."
                    description_inactive= _ "invisible:
Enemy units cannot see this unit, except for wolf-based units who can smell it if close enough. Hence except for wolf-based units, enemy units will not initiate an attack on this unit. Defense is at 80 percent for every terrain except water, where it is 70 percent."
                    affect_self=yes
                [/hides]
            [/abilities]
        [/effect]
        [effect]
            apply_to=defense
            replace=true
            [defense]
                deep_water=30
                shallow_water=30
                reef=30
                swamp_water=20
                flat=20
                sand=20
                forest=20
                hills=20
                mountains=20
                village=20
                castle=20
                cave=20
                frozen=20
                unwalkable=20
                impassable=20
                fungus=20
            [/defense]
        [/effect]
    [/object]
#enddef

# Rampage is basically the same as bloodlust, only the unit regains all movement points after kills.
#define ABILITY_RAMPAGE
	[dummy]
		id=rampage
		name= _ "rampage"
		description=_ "Rampage:
This unit regains all movement points and can attack multiple units per round after successfully killing an enemy."
	[/dummy]

[/abilities]
    [event]
        name=die
        first_time_only=no

        [filter_second]
            type=Goblin Cutthroat
        [/filter_second]

        {STORE_UNIT_VAR x,y=$x2,$y2 max_moves cutthroat_moves}
        {MODIFY_UNIT x,y=$x2,$y2 moves $cutthroat_moves}
        {MODIFY_UNIT x,y=$x2,$y2 attacks_left 1}
        {CLEAR_VARIABLE cutthroat_moves}
    [/event]
[+abilities]
#enddef

#define WEAPON_SPECIAL_PICKPOCKET

	    # Canned definition of the pickpocket ability to be included in a
	    # [specials] clause.

	    [damage]
	        id=weapon_loot
	        name= _ "loot"
	        name_inactive= _ "loot"
	        description= _ "loot :
With each successful strike, gold is taken from your opponent and given to you."
	        description_inactive= _ "loot :
With each successful strike, gold is taken from your opponent and given to you."
	        apply_to=opponent
	    [/damage]
	[/specials]
[/attack]
# event that creates a "loot has worked" variable
# and sets it to "yes" if the attacker hits at least once.
[event]
    name=attacker_hits
    first_time_only=no
    [filter_attack]
        special=weapon_loot
    [/filter_attack]
    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=unit_att_with_loot
        mode=append
    [/store_unit]
    [set_variable]
        name=unit_att_with_loot.variables.loot_has_worked
        value=yes
    [/set_variable]
    [unstore_unit]
        variable=unit_att_with_loot
    [/unstore_unit]
    {CLEAR_VARIABLE unit_att_with_loot}
[/event]
[event]
    name=attacker_hits
    first_time_only=no
    [filter_attack]
        special=weapon_loot
    [/filter_attack]
    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=looter
        mode=append
    [/store_unit]
    [store_unit]
        [filter]
            x,y=$x2,$y2
        [/filter]
        variable=looted
        mode=append
    [/store_unit]
    [if]
        [variable]
            name=looter.variables.loot_has_worked
            equals=yes
        [/variable]
        [then]
            [gold]
                side=$unit.side
                amount=1
            [/gold]
            [gold]
                side=$second_unit.side
                amount=-1
            [/gold]
            [unstore_unit]
                variable=looted
                text="$!"
                {COLOR_HEAL}
            [/unstore_unit]
        [/then]
    [/if]
    {CLEAR_VARIABLE looter}
    {CLEAR_VARIABLE looted}
[/event]
[+attack]
[+specials]
#enddef

#define ABILITY_LEADERSHIP_LEVEL_3_WOLVES
    [leadership]
        id=leadership
        value=75
        cumulative=no
        name= _ "leadership"
        female_name= _ "female^leadership"
        description= _ "Leadership:
This unit can lead our own units that are next to it, making them fight better.

Adjacent own wolves of lower level will do more damage in battle. When a wolf adjacent to, of a lower level than, and on the same side as a wolf with Leadership engages in combat, its attacks do 25% more damage times the difference in their levels."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
                race=wolf
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=leadership
        value=50
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
                race=wolf
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=leadership
        value=25
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
                race=wolf
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define WEAPON_SPECIAL_WILDFIRE
		[damage]
			id=wildfire
			name= _ "wildfire"
			description= _ "Wildfire: When attacking, all enemies adjacent to the target receive 4 fire damage."
		[/damage]
	[/specials]
	defense_weight=0
[/attack]

[event]
	name=attack end
	first_time_only=no
	[filter_attack]
		special=wildfire
	[/filter_attack]

	[sound]
		name=melee-fire.ogg
	[/sound]

	[item]
		x,y=$x2,$y2
		halo=halo/flame-burst-1.png:100,halo/flame-burst-2.png:100,halo/flame-burst-3.png:100,halo/flame-burst-4.png:100,halo/flame-burst-5.png:100,halo/flame-burst-6.png:100,halo/flame-burst-7.png:100,halo/flame-burst-8.png:100
	[/item]

	[delay]
		time=800
	[/delay]

	[remove_item]
		x,y=$x2,$y2
	[/remove_item]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
				is_enemy=no
            [/filter_adjacent]
        [/filter]
       
        variable=victims
    [/store_unit]

    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
       
        variable=firefly
    [/store_unit]

	{FOREACH victims i}
		{VARIABLE_OP victims[$i].hitpoints sub 4}
		# award 3 xp to surviving victims
		{VARIABLE_OP victims[$i].experience add 3}

		[unstore_unit]
			variable=victims[$i]
			text=_"4"
			{COLOR_HARM}
		[/unstore_unit]
	{NEXT i}

	# unit dies if it is below 1 hitpoint:
	{FOREACH victims i}
		{IF_VAR victims[$i].hitpoints less_than 1 (
			[then]
				# award xp to Firefly for kills
				{IF_VAR victims[$i].level equals 0 (
					[then]
						{VARIABLE_OP firefly.experience add 4}
					[/then]

					[else]
						{VARIABLE kill_xp $victims[$i].level}
						{VARIABLE_OP kill_xp multiply 8}
						{VARIABLE_OP firefly.experience add $kill_xp}
					[/else]
				)}

				[kill]
					x,y=$victims[$i].x,$victims[$i].y
					animate=yes
					fire_event=yes
				[/kill]
			[/then]

			[else]
				# award xp to Firefly for non-kills
				{VARIABLE_OP firefly.experience add 1}
			[/else]
		)}
	{NEXT i}

	[unstore_unit]
		variable=firefly
		find_vacant=no
	[/unstore_unit]

	{CLEAR_VARIABLE victims,firefly,kill_xp}
[/event]
[+attack]
[+specials]
#enddef
